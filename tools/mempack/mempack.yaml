# Output file (you will upload this single file to ChatGPT)
output: ./mempack.txt

notes: |
  Osiris – active milestone M1c (feature/m1c). Prioritize compiler+runner + chat flow fixes.
  Pack only deterministic, review-friendly sources. No secrets / no heavy logs / no run artifacts.

include:
# Core src
- osiris.py
- pyproject.toml
- requirements.txt
- setup.py
- osiris/cli/*.py
- osiris/core/*.py
- osiris/connectors/**/**/*.py
- osiris/components/*.py
- osiris/prompts/*

# Components registry/specs
- components/spec.schema.json
- components/*/**/spec.yaml

# Docs – keep ADRs, milestones, roadmap + top-level docs + examples
- docs/adr/*.md
- docs/milestones/*.md
- docs/roadmap/*.md
- docs/*.md
- docs/examples/*.yaml

# Tests (unit+integration+chat)
- tests/**/**/*.py

# Tools needed for context
- tools/mempack/*
- tools/validation/*.py
- tools/validation/README.md

# System prompts (prompt dumps from manual runs)
- testing_env/.osiris_prompts/**

# Repo meta (helps reviewers)
- CHANGELOG.md
- CLAUDE.md
- SECURITY.md
- LICENSE
- Makefile
- README.md

exclude:
# Python noise
- "**/__pycache__/**"
- "**/*.pyc"

# Runtime outputs / logs / artifacts (huge & non-deterministic)
- logs/**
- output/**
- tmp/**
- "**/artifacts/**"
- "**/events.jsonl"
- "**/metrics.jsonl"
- "**/*.log"

# testing_env: keep only .osiris_prompts/**
- testing_env/logs/**
- testing_env/output/**
- testing_env/tmp/**
- testing_env/**/artifacts/**
- testing_env/**/events.jsonl
- testing_env/**/metrics.jsonl
- testing_env/**/*.log

# Repo internals
- .git/**
- osiris_pipeline.egg-info/**
- uv.lock

# Also embed a fresh project tree (so I can see structure at-a-glance)
embed_tree: true

# Safety: cap the size so we don’t over-feed the model by accident
max_bytes: 6000000 # ~6 MB, uprav když bude potřeba
