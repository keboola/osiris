# Generated by Osiris Agent
# Timestamp: 2025-09-24T22:43:24.473135
# Run ID: 8a40bf88

version: 1
pipeline:
  name: lapsed_customers_reactivation
  region: eu-central

stages:
  ingest:
    - name: extract_supabase
      type: supabase.extractor
      config:
        table: customers
        select: "*"
        filters:
          - column: updated_at
            operator: ">="
            value: "{{ start_date }}"

    - name: extract_stripe
      type: stripe.extractor
      config:
        object: customers
        expand: ["subscriptions", "charges"]
        created: "{{ stripe_since }}"

    - name: extract_mixpanel
      type: mixpanel.extractor
      config:
        from_date: "{{ lookback_90d }}"
        to_date: "{{ today }}"
        event: ["Purchase", "PageView", "AddToCart"]

    - name: extract_shopify
      type: shopify.extractor
      config:
        resource: orders
        status: "any"
        created_at_min: "{{ lookback_365d }}"
        fields: ["id", "email", "total_price", "created_at", "line_items"]

    - name: extract_zendesk
      type: zendesk.extractor
      config:
        resource: tickets
        updated_since: "{{ lookback_180d }}"
        include: ["users", "comments"]

  identity_resolution:
    - name: identity_matching
      type: identity.matcher
      config:
        sources:
          - supabase: email
          - stripe: email
          - mixpanel: distinct_id
          - shopify: email
          - zendesk: requester_email
        match_rules:
          - type: deterministic
            fields: ["email", "phone"]
          - type: fuzzy_email
            threshold: 0.85
        output: unified_customer_id

  features:
    - name: rfm_scoring
      type: duckdb.transform
      config:
        sql_file: features/rfm.sql
        inputs: ["identity_matching"]
        output: rfm_scores

    - name: churn_prediction
      type: duckdb.transform
      config:
        sql_file: features/churn_score.sql
        inputs: ["rfm_scores", "extract_mixpanel"]
        output: churn_scores

    - name: support_topics
      type: duckdb.transform
      config:
        sql_file: features/topics.sql
        inputs: ["extract_zendesk"]
        output: support_topics

  segments:
    - name: lapsed_90
      type: duckdb.transform
      config:
        sql_file: segments/lapsed_90.sql
        inputs: ["churn_scores"]
        output: segment_lapsed_90

    - name: lapsed_vip
      type: duckdb.transform
      config:
        sql_file: segments/lapsed_vip.sql
        inputs: ["rfm_scores", "churn_scores"]
        output: segment_lapsed_vip

    - name: high_churn_risk
      type: duckdb.transform
      config:
        sql_file: segments/high_churn_risk.sql
        inputs: ["churn_scores", "support_topics"]
        output: segment_churn_risk_high

  dq:
    - name: quality_checks
      type: dq.guardian
      config:
        rules:
          - type: null_ratio
            threshold: 0.02
            columns: ["email", "unified_customer_id", "last_purchase_date"]
          - type: uniqueness
            table: orders
            column: order_id
          - type: schema_drift
            source: mixpanel_events
            alert_on_new_columns: true
          - type: business_check
            expression: "COUNT(CASE WHEN last_purchase_date > CURRENT_DATE THEN 1 END) = 0"
            error_message: "Future dated purchases detected"

  activation:
    - name: google_ads_upload
      type: google_ads.writer
      config:
        audience: lapsed90
        holdout: 0.10
        frequency_cap_per_week: 3
        campaign: "Win-Back Q1 2025"

    - name: esp_campaign
      type: esp.writer
      config:
        segment: segment_churn_risk_high
        template: recovery_with_reason_codes
        schedule: "0 10 * * *"  # Daily 10am
        a_b_test:
          enabled: true
          variants: ["subject_line_a", "subject_line_b"]

  publish:
    - name: iceberg_write
      type: iceberg.writer
      config:
        database: marketing
        table: customers_curated
        mode: append
        partition_by: ["updated_date"]
        sort_by: ["unified_customer_id"]

privacy:
  pii_mask_preview: true
  consent_filter: required
  data_residency: eu

agents:
  dq_guardian:
    webhook: "https://hooks.osiris.io/dq/{{ pipeline_id }}"
    on_warning: notify
    on_failure: halt
