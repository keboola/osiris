oml_version: 0.1.0
name: multi_source_activation_pipeline
description: Reactivate lapsed customers with identity resolution and segmentation
metadata:
  run_id: 30e55062572e
  generated_at: '2025-09-17T16:10:23.699222'
  eu_data_zone: true
  consent_required: true
steps:
- id: extract_supabase_users
  component: supabase.extractor
  mode: read
  config:
    connection: '@supabase.prod'
    query: SELECT * FROM users WHERE updated_at >= '2024-01-01'
    pii_columns:
    - email
    - phone
- id: extract_stripe_charges
  component: stripe.extractor
  mode: read
  config:
    connection: '@stripe.prod'
    object: charges
    filters:
      created:
        gte: 1704067200
    pii_columns:
    - customer_email
- id: extract_mixpanel_events
  component: mixpanel.extractor
  mode: read
  config:
    connection: '@mixpanel.prod'
    event_names:
    - purchase
    - add_to_cart
    - page_view
    from_date: '2024-01-01'
    schema_version: '2.1'
- id: extract_shopify_orders
  component: shopify.extractor
  mode: read
  config:
    connection: '@shopify.prod'
    resource: orders
    status: any
    limit: 250
    pii_columns:
    - customer_email
    - shipping_address
- id: extract_zendesk_tickets
  component: zendesk.extractor
  mode: read
  config:
    connection: '@zendesk.support'
    type: ticket
    status:
    - closed
    - solved
    pii_columns:
    - requester_email
- id: identity_resolution
  component: duckdb.transformer
  mode: transform
  config:
    sql: "\n                    WITH identity_graph AS (\n                        -- Deterministic matching on email\n   \
      \                     SELECT DISTINCT\n                            email as match_key,\n                           \
      \ customer_id,\n                            'deterministic' as match_type,\n                            0.99 as confidence\n\
      \                        FROM unified_customers\n                        WHERE email IS NOT NULL\n\n               \
      \         UNION ALL\n\n                        -- Probabilistic matching on name + address\n                       \
      \ SELECT DISTINCT\n                            MD5(CONCAT(last_name, postal_code)) as match_key,\n                 \
      \           customer_id,\n                            'probabilistic' as match_type,\n                            0.85\
      \ as confidence\n                        FROM unified_customers\n                        WHERE last_name IS NOT NULL\n\
      \                    )\n                    SELECT * FROM identity_graph\n                    "
  inputs:
  - extract_supabase_users
  - extract_stripe_charges
  - extract_shopify_orders
- id: compute_rfm
  component: duckdb.transformer
  mode: transform
  config:
    sql_file: assets/duckdb/01_rfm.sql
    params:
      recency_days: 90
      frequency_min: 2
      monetary_percentile: 0.75
  inputs:
  - identity_resolution
  - extract_stripe_charges
- id: compute_churn_score
  component: duckdb.transformer
  mode: transform
  config:
    sql_file: assets/duckdb/02_churn_score.sql
  inputs:
  - compute_rfm
  - extract_mixpanel_events
- id: extract_topics
  component: duckdb.transformer
  mode: transform
  config:
    sql_file: assets/duckdb/03_topics_from_tickets.sql
    topic_model: bag_of_words_v1
  inputs:
  - extract_zendesk_tickets
- id: segment_lapsed90
  component: duckdb.transformer
  mode: transform
  config:
    sql_file: assets/duckdb/10_segment_lapsed90.sql
    params:
      days_since_purchase: 90
  inputs:
  - compute_rfm
- id: segment_lapsed_vip
  component: duckdb.transformer
  mode: transform
  config:
    sql_file: assets/duckdb/11_segment_lapsed_vip.sql
    params:
      days_since_purchase: 90
      monetary_percentile: 0.9
  inputs:
  - compute_rfm
- id: segment_churnrisk_high
  component: duckdb.transformer
  mode: transform
  config:
    sql_file: assets/duckdb/12_segment_churnrisk_high.sql
    params:
      churn_threshold: 0.75
  inputs:
  - compute_churn_score
- id: dq_validation
  component: duckdb.transformer
  mode: transform
  config:
    rules:
    - name: null_ratio
      sql: SELECT AVG(CASE WHEN email IS NULL THEN 1 ELSE 0 END) as null_ratio FROM {table}
      threshold: 0.02
    - name: uniqueness
      sql: SELECT COUNT(*) - COUNT(DISTINCT order_id) as duplicates FROM orders
      threshold: 0
    - name: business_check
      sql: SELECT SUM(order_total) >= SUM(payment_total) * 0.9 as valid FROM reconciliation
      expected: true
  inputs:
  - segment_lapsed90
  - segment_lapsed_vip
  - segment_churnrisk_high
- id: apply_consent_filter
  component: duckdb.transformer
  mode: transform
  config:
    sql: "\n                    SELECT * FROM customers\n                    WHERE consent_marketing = TRUE\n            \
      \        AND consent_updated_at >= CURRENT_DATE - INTERVAL '365 days'\n                    AND data_residency = 'EU'\n\
      \                    "
  inputs:
  - dq_validation
- id: activate_google_ads
  component: google_ads.writer
  mode: write
  config:
    connection: '@google_ads.prod'
    customer_id: 123-456-7890
    audience_list_id: aud_8c9e5f2a
    holdout_percentage: 10
    frequency_cap:
      impressions: 3
      time_unit: week
  inputs:
  - apply_consent_filter
- id: activate_esp
  component: esp.writer
  mode: write
  config:
    connection: '@esp.marketing'
    list_id: list_vip_reactivation
    template_id: tmpl_winback_2024
    holdout_percentage: 10
    send_time_optimization: true
  inputs:
  - apply_consent_filter
- id: publish_to_iceberg
  component: iceberg.publisher
  mode: write
  config:
    catalog: data_lake
    namespace: activation
    tables:
    - segments
    - features
    - activation_log
    partition_by:
    - date
    - segment_id
    commit_message: Activation pipeline run 30e55062572e
  inputs:
  - activate_google_ads
  - activate_esp
quality:
  global_rules:
    max_null_percentage: 2.0
    require_unique_keys: true
    schema_evolution: strict_compatible
  warnings:
  - step: extract_mixpanel_events
    type: schema_drift
    message: 'New field detected: utm_campaign (non-breaking)'
privacy:
  pii_masking:
    enabled: true
    patterns:
    - email
    - phone
    - ssn
    - credit_card
  consent:
    required: true
    default: opt_out
    refresh_days: 365
  data_residency:
    regions:
    - EU
    enforce: true
